<?php

function andrew_report() {
    // Get carts and store ids for cart products
    $cart_list = db_query("SELECT nid, title FROM node WHERE type = 'shopping_cart' ORDER BY title")->fetchAll();
    
    $count = count($cart_list);
    echo "<h1>$count</h1>";
    
    // Load all terms from vocabulary
    $vocabulary = taxonomy_vocabulary_machine_name_load('paypal_products');
    $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));
    
    // Store term names for all terms
    $vocab_names = array();
    $vocab_names[] = 'Cart Name'; // Add header item for 'Cart Name'
    foreach($terms as $term) {
        $tid = $term->tid;
        $term_data = taxonomy_term_load($tid);
        $vocab_names[] = $term_data->name;
    }
    asort($vocab_names);
    
    // Store names for column headers
    $vocab_names_out = implode(",", $vocab_names);
    echo $vocab_names_out;

    $cart_data_all = array();
    foreach($cart_list as $cart) {
        $nid = $cart->nid;
        $title = $cart->title;
        $node = node_load($nid);
        $formtype = field_get_items('node', $node, 'field_integration_group');
    
        // Get products for the cart
        $pp_products = array();
        foreach($formtype as $itemid) {
            $item = field_collection_field_get_entity($itemid);
            //$pp_products[] = $item->field_paypal_products['und'][0]['tid'];
            $product = taxonomy_term_load($item->field_paypal_products['und'][0]['tid']);
            $product_name = $product->name;
            $pp_products[] = $product_name;
        }
        //printArray($pp_products);
        
        $cart_data = array();
        $cart_data['title'] = $title;
        // Loop through each product to generate y/n output for this cart
        foreach($vocab_names as $product) {
            if(in_array($product, $pp_products)) {
                $val = "Y";
            }
            else {
                $val = "N";
            }
            $cart_data[] = $val;
        }
        $cart_data_all[] = $cart_data;
    }
    
    //$output = $vocab_names_out;
    //printArray($cart_data_all);
    
    $output = "<table>";
    $output.= " <thead>";
    $output.= "     <tr>";
    $output.= "     <th>Cart Name</th>";
    foreach($vocab_names as $vn) {
        $output.= "<th>$vn</th>";
    }
    $output.= "     </tr>";
    $output.= " </thead>";
    $output.= " <tbody>";
    
    $cart_data_array = array();
    
    foreach($cart_data_all as $cd) {
        $output.= "<tr>";
        $cart_data_temmp = array();
        foreach($cd as $c) {
            $output.= " <td>" . $c . "</td>";
            $cart_data_temmp[] = $c;
        }
        $output.= "</tr>";
        $cart_data_array[] = $cart_data_temmp;
    }
    
    $output.= " </tbody>";
    $output.= "</table>";
    
    //printVars($cart_data_array);
    $cdo = "";
    foreach($cart_data_array as $cd) {
        $cdo.= implode(",", $cd);
        $cdo.= "\n";
    }
    
    // Store names for column headers
    $cart_data_out = implode(",", $cart_data_array);
    echo "<h1>Hello</h1>" . $cdo;
    $newout = $vocab_names_out . $cart_data_out;
    
    //echo $output;
    
    // Write data to output CSV file
    $myfile = fopen("test.csv", "w") or die("Unable to open file!");
    fwrite($myfile, $vocab_names_out);
    fwrite($myfile, "\n");
    fwrite($myfile, $cdo);
    fclose($myfile);
}